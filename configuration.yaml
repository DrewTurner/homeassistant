homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Chicago
  # Customization file
  customize: !include customize.yaml

stream:

media_player:
  - platform: spotify
    client_id: !secret spotify_client_id
    client_secret: !secret spotify_client_secret

#setting up ios notifications
#dt 1/1/2018
ios:

#setup a notify app
#dt 1/1/2018
notify:
 - platform: ios
   name: iOSApp
   target: !secret ios_target_id

  #setting up unifi access
device_tracker:
  - platform: unifi
    host: !secret unifi_server
    verify_ssl: False
    username: !secret unifi_username
    password: !secret unifi_password
    new_device_defaults:
      track_new_devices: False
      hide_if_away: True

#setting up nvr access
camera:
  - platform: uvc
    nvr: !secret unifi_video_server
    key: !secret unifi_video_key
    password: !secret unifi_video_password
  - platform: mjpeg
    name: OctoPrint
    still_image_url: !secret octostillimageurl
    mjpeg_url: !secret octomjpeg_url
  - platform: generic
    name: OctoPrintGeneric
    still_image_url: !secret octostillimageurl

  #setting up nest
  #dt 12/28/2017
nest:
  client_id: !secret nest_client_id
  client_secret: !secret nest_client_secret
  sensors:
    monitored_conditions:
      - 'temperature'
      - 'target'
      - 'humidity'
      - 'operation_mode'
      - 'hvac_state'

#enable system health monitoring
system_health:

#access to octoprint for ender 3
octoprint:
  host: !secret octoprinthostip
  api_key: !secret octoprintapikey
  bed: true

#setup ring
ring:
  username: !secret ring_username
  password: !secret ring_password

#setup zwave and secure zwave
#dt 1/4/2018
zwave:
  usb_path: /dev/ttyACM0
  network_key: !secret zwave_network_key
  polling_interval: 30000
  device_config:
    zwave.back_door:
      polling_intensity: 1

# Show links to resources in log and frontend
#introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
# Secrets are defined in the file secrets.yaml
# force password
#dt 12/28/2017
    api_password: !secret http_password
    use_x_forwarded_for: true
    trusted_proxies: !secret trusted_proxy
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
    base_url: !secret http_base_url

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:
  exclude:
    entities:
     - sensor.front_door_sourcenodeid
     - sensor.front_door_burglar
     - sensor.front_door_alarm_type
     - sensor.front_door_alarm_level
     - sensor.vision_zg8101_garage_door_detector_alarm_type
     - sensor.vision_zg8101_garage_door_detector_burglar
     - sensor.vision_zg8101_garage_door_detector_sourcenodeid
     - sensor.back_door_sourcenodeid
     - sensor.back_door_burglar
     - sensor.back_door_alarm_type
     - sensor.back_door_alarm_level
 #    - sensor.ring_front_door_battery
 #    - sensor.ring_front_door_last_activity
 #    - sensor.ring_front_door_last_ding
 #    - sensor.ring_front_door_volume
 #    - sensor.ring_front_door_wifi_signal_category
 #    - sensor.ring_front_door_wifi_signal_strength
 #    - binary_sensor.ring_front_door_motion
 #    - binary_sensor.ring_front_door_ding
     - camera.harper
     - camera.uvc_dome
     - camera.uvc_g3
     - zwave.outside_lights_1
     - zwave.garage_door
     - zwave.front_door
     - zwave.back_door
     - zwave.aeotec_zw090_zstick_gen5_us

# View all events in a logbook
logbook:
  exclude:
    entities:
     - sensor.front_door_sourcenodeid
     - sensor.front_door_burglar
     - sensor.front_door_alarm_type
     - sensor.front_door_alarm_level
     - sensor.vision_zg8101_garage_door_detector_alarm_type
     - sensor.vision_zg8101_garage_door_detector_burglar
     - sensor.vision_zg8101_garage_door_detector_sourcenodeid
     - sensor.back_door_sourcenodeid
     - sensor.back_door_burglar
     - sensor.back_door_alarm_type
     - sensor.back_door_alarm_level
#     - sensor.ring_front_door_battery
#     - sensor.ring_front_door_last_activity
#     - sensor.ring_front_door_last_ding
#     - sensor.ring_front_door_volume
#     - sensor.ring_front_door_wifi_signal_category
#     - sensor.ring_front_door_wifi_signal_strength
#     - binary_sensor.ring_front_door_motion
#     - binary_sensor.ring_front_door_ding
     - camera.harper
     - camera.uvc_dome
     - camera.uvc_g3
     - zwave.outside_lights_1
     - zwave.garage_door
     - zwave.front_door
     - zwave.back_door
     - zwave.aeotec_zw090_zstick_gen5_us
# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

input_select:
  destination:
    name: destination
    options:
      - Home
      - DayCare
      - Work

#switch
#christmas lights girls trees
switch:
  - platform: mqtt
    name: "Christmas Lights"
    command_topic: "cmnd/sonoff/power"
    state_topic: "stat/sonoff/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true

#christmas lights main tree
  - platform: mqtt
    name: "Christmas Tree Lights"
    command_topic: "cmnd/christmastreelights/power"
    state_topic: "stat/christmastreelights/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true

#pwrswitch1
  - platform: mqtt
    name: "Ender 3 Power"
    command_topic: "cmnd/pwrswitch1/power"
    state_topic: "stat/pwrswitch1/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"

#pwrswitch2
  - platform: mqtt
    name: "Ender 3 Light"
    command_topic: "cmnd/pwrswitch2/power"
    state_topic: "stat/pwrswitch2/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"

#Sensors
#Weather prediction
weather:
  - platform: darksky
    api_key: !secret darksky_api_key
    units: us
    mode: daily
    latitude: !secret latitude
    longitude: !secret longitude
    

#speedtest
speedtestdotnet:
  server_id: 5263
  scan_interval:
    hours: 4
  monitored_conditions:
    - ping
    - download
    - upload

sensor:
#pwrswitch2 data collection
  - platform: mqtt
    name: "Ender3 Voltage"
    state_topic: "tele/pwrswitch2/SENSOR"
    value_template: "{{value_json['ENERGY'].Voltage }}"
    qos: 2
    unit_of_measurement : "V"
    icon: mdi:flash-circle
    availability_topic: "tele/pwrswitch2/LWT"
    payload_available: "Online"
    payload_not_available: "Offline" 

  - platform: mqtt
    name: "Ender3 Watts"
    state_topic: "tele/pwrswitch2/SENSOR"
    value_template: "{{value_json['ENERGY'].Power }}"
    qos: 2
    unit_of_measurement : "W"
    icon: mdi:flash-circle
    availability_topic: "tele/pwrswitch2/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"

  - platform: mqtt
    name: "Ender3 Amps"
    state_topic: "tele/pwrswitch2/SENSOR"
    value_template: "{{value_json['ENERGY'].Current }}"
    qos: 2
    unit_of_measurement : "A"
    icon: mdi:flash-circle
    availability_topic: "tele/pwrswitch2/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"

#darksky
  - platform: darksky
    api_key: !secret darksky_api_key
    forecast:
      - 0
    monitored_conditions:
      - summary
      - icon
      - temperature
      
#Waze!
#general where am I to locations:
  - platform: waze_travel_time
    name: "Travel from Current Location to Home"
    origin: device_tracker.foehammer
    destination: !secret home_address
    region: 'US'
  - platform: waze_travel_time
    name: "Travel from Current Location to Work"
    origin: device_tracker.foehammer
    destination: !secret work_address
    region: 'US'

#Dropping off the Girls
  - platform: waze_travel_time
    name: "Travel from Current Location to DayCare"
    origin: device_tracker.foehammer
    destination: !secret daycare_address
    region: 'US'

  - platform: waze_travel_time
    name: "Travel from Daycare to Work"
    origin: !secret daycare_address
    destination: !secret work_address
    region: 'US'

#Picking Up the Girls
  - platform: waze_travel_time
    name: "Travel from Work to Daycare"
    origin: !secret work_address
    destination: !secret daycare_address
    region: 'US'

  - platform: waze_travel_time
    name: "Travel from Daycare to Home"
    origin: !secret daycare_address
    destination: !secret home_address
    region: 'US'

#homeassistant platform monitor
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: memory_free
      - type: processor_use
      - type: last_boot
      - type: load_1m
      - type: load_5m
      - type: load_15m

#stock sensors
  - platform: alpha_vantage
    api_key: !secret alpha_vantage_api_key
    symbols:
    - symbol: VGT
      name: Vanguard Information Technology Index Fund

#temp and humidity
  - platform: mqtt
    name: 'Freezer Temperature'
    state_topic: 'home/freezer/temperature'
    qos: 0
    unit_of_measurement: "ºF"

  - platform: mqtt
    name: 'Freezer Humidity'
    state_topic: 'home/freezer/humidity'
    qos: 0
    unit_of_measurement: "%"

  - platform: mqtt
    name: 'H&G Temperature'
    state_topic: 'home/girls/temperature'
    qos: 0
    unit_of_measurement: "ºF"

  - platform: mqtt
    name: 'H&G Humidity'
    state_topic: 'home/girls/humidity'
    qos: 0
    unit_of_measurement: "%"    

#pollen sensor
  - platform: pollen
    zip_code: "65010"
    monitored_conditions:
      - allergy_average_forecasted
      - allergy_index_today
      - allergy_index_yesterday
      - disease_average_forecasted

#pihole sensor
  - platform: pi_hole
    host: 192.168.101.31
    monitored_conditions:
      - ads_blocked_today
      - ads_percentage_today
      - dns_queries_today
      - domains_being_blocked
      - queries_cached
      - queries_forwarded
      - unique_clients
      - unique_domains
      - clients_ever_seen

  - platform: yr

#rest sensor for water softener salt level
  - platform: rest
    name: Salt Level
    resource: http://192.168.100.73
    scan_interval: 300

#whats starmans status?
  - platform: rest
    name: Starman
    json_attributes:
      - earth_distance_km
    value_template: '{{ value_json["speed_kph"] }}'
    unit_of_measurement: "km/h"
    resource: 'https://api.spacexdata.com/v2/info/roadster'

#when is spacex's next launch?
  - platform: rest
    name: SpaceX
    json_attributes:
      - mission_name
      - launch_site
      - rocket
    value_template: '{{ value_json["launch_date_unix"] }}'
    resource: 'https://api.spacexdata.com/v2/launches/next'

#dynamically change icons
  - platform: template
    sensors:
      home_garage_door:
        friendly_name: "Home Garage Door"
        value_template: >-
          {% if is_state('sensor.vision_zg8101_garage_door_detector_alarm_level_2', '255') %}
            Open
          {% else %}
            Closed
          {% endif %}        
        icon_template: >-
          {% if is_state('sensor.vision_zg8101_garage_door_detector_alarm_level_2', '255') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}
  - platform: template
    sensors:
      front_door:
        friendly_name: "Front Door"
        value_template: >-
          {% if is_state('sensor.front_door_access_control', '23') %}
            Closed
          {% else %}
            Open
          {% endif %}
        icon_template: >-
          {% if is_state('sensor.front_door_access_control', '23') %}
            mdi:door-closed
          {% else %}
            mdi:door-open
          {% endif %}
  - platform: template
    sensors:
      basement_door:
        friendly_name: "Basement Door"
        value_template: >-
          {% if is_state('sensor.back_door_access_control', '23') %}
            Closed
          {% else %}
            Open
          {% endif %}
        icon_template: >-
          {% if is_state('sensor.back_door_access_control', '23') %}
            mdi:door-closed
          {% else %}
            mdi:door-open
          {% endif %}
  - platform: template
    sensors:
      deck_door:
        friendly_name: "Deck Door"
        value_template: >-
          {% if is_state('sensor.deckdoor_access_control', '23') %}
            Closed
          {% else %}
            Open
          {% endif %}
        icon_template: >-
          {% if is_state('sensor.deckdoor_access_control', '23') %}
            mdi:door-closed
          {% else %}
            mdi:door-open
          {% endif %}
  - platform: template
    sensors:
      front_door_battery:
        friendly_name: 'Front Door Battery Level'
        value_template: '{{ states.zwave.front_door.attributes.battery_level }}'
        unit_of_measurement: '%'
  - platform: template
    sensors:
      back_door_battery:
        friendly_name: 'Back Door Battery Level'
        value_template: '{{ states.zwave.back_door.attributes.battery_level }}'
        unit_of_measurement: '%'
  - platform: template
    sensors:
      garage_door_battery:
        friendly_name: 'Garage Door Battery Level'
        value_template: '{{ states.zwave.garage_door.attributes.battery_level }}'
        unit_of_measurement: '%'

  - platform: template
    sensors:
      starman_speed:
        friendly_name: 'Starman Speed'
        value_template: '{{ states.sensor.starman.state | round(0) }}'
        unit_of_measurement: 'km/h'
      starman_earth_distance:
        friendly_name: 'Starman Distance'
        value_template: '{{ (states.sensor.starman.attributes["earth_distance_km"] | multiply(0.000001)) | round(2) }}'
        unit_of_measurement: 'km x10⁶'
      spacex_next_launch_day:
        friendly_name: 'Next SpaceX Launch'
        value_template: '{{ states.sensor.spacex.state | int | timestamp_custom("%d.%m.%Y")}}'
      spacex_next_launch_time:
        friendly_name: 'Next SpaceX Launch Time'
        value_template: '{{ states.sensor.spacex.state | int | timestamp_custom("%H:%M")}}'
        unit_of_measurement: 'h'
      spacex_next_rocket:
        friendly_name: 'Rocket'
        value_template: '{{ states.sensor.spacex.attributes["rocket"]["rocket_name"] }}'
      spacex_next_launch_site:
        friendly_name: 'Launch Site'
        value_template: '{{ states.sensor.spacex.attributes["launch_site"]["site_name_long"] }}'
      spacex_next_mission_name:
        friendly_name: 'Mission'
        value_template: '{{ states.sensor.spacex.attributes["mission_name"] }}'


#ring platform
  - platform: ring

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

#binary sensors
binary_sensor:

#salt water level above or below threshold.
  - platform: threshold
    entity_id: sensor.salt_level
    upper: 30
    name: "Salt Level Threshold"

#freezer temp above threshold
  - platform: threshold
    entity_id: sensor.freezer_temperature
    upper: 5
    name: "Freezer Temp Threshold"

##homesystemmonitors
#sensor for loadbalancer
  - platform: ping
    host: 192.168.101.23
    name: Loadbalancer

#sensor for challenger
  - platform: ping
    host: 192.168.101.13
    name: Challenger

#sensor for ubiquiticontroller
  - platform: ping
    host: 192.168.101.35
    name: UbiquitiController

#sensor for freezer wemos
  - platform: ping
    host: 192.168.100.61
    name: wemos_freezer

#sensor for salt wemos
  - platform: ping
    host: 192.168.100.73
    name: wemos_salt

#sensor for pwrswitch1 for ender 3
  - platform: ping
    host: 192.168.100.64
    name: pwrswitch1

#sensor for octopi
  - platform: ping
    host: 192.168.100.16
    name: octopi

#binary_sensors for ring doorbell
  - platform: ring

#enable cast to chromecast
cast:
  media_player:
    - host: 192.168.100.62
    - host: 192.168.100.82

# Cloud
cloud:

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

#setup notifications
#dt 1/1/2018
#alert if back door has been opened
alert:
  basement_back_door:
    name: Basement Backdoor is open
    done_message: Basement Backdoor was shut
    entity_id: sensor.back_door_access_control
    state: '22'
    repeat: 5
    can_acknowledge: True
    notifiers:
      - iosapp

  deck_door:
    name: Deck Door is open
    done_message: Deck Door was shut
    entity_id: sensor.deckdoor_access_control
    state: '22'
    repeat: 5
    can_acknowledge: True
    notifiers:
      - iosapp

#alert if front door has been opened
  front_door:
    name: Front Door is Open
    done_message: Front Door was shut
    entity_id: sensor.front_door_access_control
    state: '22'
    repeat: 15
    can_acknowledge: True
    notifiers:
      - iosapp

#alerts if garage door has been open for more than 5 minutes.
  garage_door:
    name: Garage Door is Open
    done_message: Garage Door was shut
    entity_id: sensor.garage_door_alarm_level
    state: '255'
    repeat: 15
    can_acknowledge: True
    notifiers:
      - iosapp

#alert if salt needs to be replenished      
  replenish_salt:
    name: Replenish Salt
    done_message: Salt Level is Normal
    entity_id: binary_sensor.salt_level_threshold
    state: 'on'
    repeat: 1440
    can_acknowledge: True
    notifiers:
      - iosapp

#alert if freezer is not working      
  freezer_temp_alert:
    name: Freezer Temp Alert
    done_message: Freezer Temp is Ok
    entity_id: binary_sensor.freezer_temp_threshold
    state: 'on'
    repeat: 15
    can_acknowledge: True
    notifiers:
      - iosapp 

#alert if loadbalancer goes down
  loadbalancerisdown:
    name: Loadbalancer is Down
    done_message: Loadbalancer is Up
    entity_id: binary_sensor.loadbalancer
    state: 'off'
    repeat: 240
    can_acknowledge: True
    notifiers:
      - iosapp

#alert if challenger goes down
  challengerisdown:
    name: challenger is Down
    done_message: challenger is Up
    entity_id: binary_sensor.challenger
    state: 'off'
    repeat: 240
    can_acknowledge: True
    notifiers:
      - iosapp      

#alert if loadbalancer goes down
  ubiquiticontrollerisdown:
    name: ubiquiticontroller is Down
    done_message: ubiquiticontroller is Up
    entity_id: binary_sensor.ubiquiticontroller
    state: 'off'
    repeat: 240
    can_acknowledge: True
    notifiers:
      - iosapp

#alert if freezer wemos goes down
  wemos_freezer_down:
    name: wemos_freezer is Down
    done_message: wemos_freezer is Up
    entity_id: binary_sensor.wemos_freezer
    state: 'off'
    repeat: 240
    can_acknowledge: True
    notifiers:
      - iosapp
      
#alert if wemossaltmonitor goes down
  wemos_salt_isdown:
    name: wemos_salt is Down
    done_message: wemos_salt is Up
    entity_id: binary_sensor.wemos_salt
    state: 'off'
    repeat: 240
    can_acknowledge: True
    notifiers:
      - iosapp

#alert if pwrswitch1 goes down
  pwrswitch1_isdown:
    name: pwrswitch1 is Down
    done_message: pwrswitch1 is Up
    entity_id: binary_sensor.pwrswitch1
    state: 'off'
    repeat: 240
    can_acknowledge: True
    notifiers:
      - iosapp     

#alert if octopi goes down
  octopi_isdown:
    name: octopi is Down
    done_message: octopi is Up
    entity_id: binary_sensor.octopi
    state: 'off'
    repeat: 240
    can_acknowledge: True
    notifiers:
      - iosapp             

#Tell me when octoprint is done
  printisdone:
    name: Print is Done
    done_message: Printing has Started
    entity_id: binary_sensor.octoprint_printing
    state: 'off'
    repeat: 1440
    can_acknowledge: True
    notifiers:
      - iosapp

#turn the outside lights on during evening to 50%
scene:
  - name: eveninglightturnon
    entities:
      light.outside_lights_1_level:
        state: on
        brightness_pct: 50
#christmas lights scene
  - name: christmas_lights_on
    entities:
      switch.christmas_lights: on
      switch.christmas_tree_lights: on
      switch.power_switch_1: on
  - name: christmas_lights_off
    entities:
      switch.christmas_lights: off
      switch.power_switch_1: off
      switch.christmas_tree_lights: off

#enable mqtt broker
mqtt:
  discovery: true
  discovery_prefix: homeassistant
  password: !secret http_password

#Cover to control garage door
cover:
  - platform: mqtt
    name: "single"
#    state_topic: "sensor/garage/state1"
    command_topic: "sensor/garage/action1"
    payload_open: "OPEN"
    payload_close: "OPEN"
    payload_stop: "OPEN"
#    state_open: "open"
#    state_closed: "closed"
#    optomistic: false
#    retain: true

#this dynamically assigns value and icon templates to the garage door.
#control is in the mqtt single cover.  Icon is decided by sensor.vision_zg8101_garage_door_detector_alarm_level
  - platform: template
    covers:
      garagedoorcontrol:
        friendly_name: "Garage Door"
        value_template: >-
          {% if is_state('sensor.garage_door_alarm_level', '255') %}
            Open
          {% else %}
            Closed
          {% endif %}        
        icon_template: >-
          {% if is_state('sensor.garage_door_alarm_level', '255') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}
        open_cover:
          service: cover.open_cover
          data:
            entity_id: cover.single
        stop_cover:
          service: cover.stop_cover
          data:
            entity_id: cover.single
        close_cover:
          service: cover.close_cover
          data:
            entity_id: cover.single
#logger:
#  default: warning
#  logs:
#    homeassistant.components.mqtt: debug
